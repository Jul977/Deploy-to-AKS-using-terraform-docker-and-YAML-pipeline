trigger:
- main

resources:
- repo: self

variables:
  ImageRepo: julimage
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'julacr'
        repository: '$ImageRepo'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/Julapp/Julapp/Dockerfile'
        tags: |
          $(tag)
          latest
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/$/kubernetes'
        artifact: 'manifest'
        publishLocation: 'pipeline'
    

- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
    julacrsecret: 123456
  jobs:
    - job: Deploy
      displayName: Deploy To AKS
      pool:
       vmImage: ubuntu-latest
      steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: 'current'
            artifactName: 'manifest'
            targetPath: '$(Pipeline.Workspace)/manifest'
        - task: KubernetesManifest@1
          inputs:
            action: 'createSecret'
            connectionType: 'azureResourceManager'
            azureSubscriptionConnection: 'julPrincipal'
            azureResourceGroup: 'Bin'
            kubernetesCluster: 'jul-aks'
            namespace: 'default'
            secretType: 'dockerRegistry'
            secretName: '$(julacrsecret)'
            dockerRegistryEndpoint: 'julacr'
        - task: KubernetesManifest@1
          inputs:
            action: 'deploy'
            connectionType: 'azureResourceManager'
            azureSubscriptionConnection: 'julPrincipal'
            azureResourceGroup: 'Bin'
            kubernetesCluster: 'jul-aks'
            namespace: 'default'
            manifests: '$(Pipeline.Workspace)/manifest/julimage-deployment.yaml'